-- KHỞI TẠO DATABASE SUPERMARKET_SALES
DROP DATABASE IF EXISTS SUPERMARKET_SALES
CREATE DATABASE SUPERMARKET_SALES
ON
(
	NAME = 'SUPERMARKET_SALES_DATA',
	FILENAME = 'SUPERMARKET_SALES_DATA.mdf',
	SIZE = 10MB,
	MAXSIZE = 100MB,
	FILEGROWTH = 5MB
)
LOG ON
(
	NAME = 'SUPERMARKET_SALES_LOG',
	FILENAME = 'SUPERMARKET_SALES_LOG.ldf',
	SIZE = 5MB,
	MAXSIZE = 50MB,
	FILEGROWTH = 5MB
)

USE SUPERMARKET_SALES
GO

--A. BẠN HÃY XÂY DỰNG ĐOẠN TRUY VẤN ĐẾM TỔNG SỐ ĐƠN HÀNG ĐƯỢC ORDER
SELECT 
	COUNT(DISTINCT S.Invoice_ID) AS [Total Order]
FROM [dbo].[supermarket_sales] AS S;

--B. BẠN HÃY XÂY DỰNG ĐOẠN TRUY VẤN TÍNH TỔNG DOANH SỐ THEO TỪNG BRANCH. KẾT QUẢ LÀM 
--TRÒN ĐẾN 2 CHỮ SỐ THẬP PHÂN
SELECT 
	S.Branch,
	ROUND(SUM(S.Unit_price * S.Quantity), 2) AS [Sum Sales]
FROM [dbo].[supermarket_sales] AS S
GROUP BY S.Branch;

--A. BẠN HÃY XÂY DỰNG ĐOẠN TRUY VẤN TÍNH TỔNG DOANH SỐ VÀ SỐ LƯỢNG ĐƠN HÀNG CỦA TỪNG 
--PRODUCT LINE
SELECT 
	S.Product_line,
	ROUND(SUM(S.Unit_price * S.Quantity), 2) AS [Sum Sales],
	COUNT(DISTINCT S.Invoice_ID) AS [Total Order]
FROM [dbo].[supermarket_sales] AS S
GROUP BY S.Product_line;

--B. BẠN HÃY XÂY DỰNG ĐOẠN TRUY VẤN TÍNH TỔNG DOANH SỐ, TỔNG SỐ ĐƠN HÀNG CỦA TỪNG LOẠI 
--KHÁCH HÀNG THEO TỪNG PRODUCT LINE. (TỔNG DOANH SỐ LÀM TRÒN ĐẾN 2 CHỮ SỐ THẬP PHÂN)  
SELECT
	S.Product_line,
	S.Customer_type,       
	ROUND(SUM(S.Unit_price * S.Quantity), 2) AS [Sum Sales],
	COUNT(DISTINCT S.Invoice_ID) AS [Total Order]
FROM [dbo].[supermarket_sales] AS S
GROUP BY S.Product_line, S.Customer_type;

--A. VỚI THÁNG CÓ DOANH SỐ CAO NHẤT, BẠN HÃY TÌM RA CÁC KHUNG GIỜ CÓ TỔNG SỐ ĐƠN HÀNG 
--CAO HƠN SỐ LƯỢNG ĐƠN HÀNG TRUNG BÌNH THEO GIỜ CỦA THÁNG ĐÓ.
WITH CTE_MONTHLY_SALES AS
(
	SELECT 
		MONTH(S.[Date]) AS ZF_MONTH,
		SUM(S.Unit_price * S.Quantity) AS ZF_SUM_SALES
	FROM [dbo].[supermarket_sales] AS S
	GROUP BY MONTH(S.[Date])
),
CTE_MAX_SALES_MONTH AS
(
	SELECT TOP 1 ZF_MONTH
	FROM CTE_MONTHLY_SALES
	ORDER BY ZF_SUM_SALES DESC
),
CTE_HOURLY_ORDER AS
(
	SELECT 
		MONTH(S1.[Date]) AS TF_MONTH,
		DATEPART(HOUR, S1.[Time]) AS TF_HOUR,
		COUNT(DISTINCT S1.Invoice_ID) AS TF_TOTAL_ORDER
	FROM [dbo].[supermarket_sales] AS S1
	GROUP BY MONTH(S1.[Date]), DATEPART(HOUR, S1.[Time])
),
CTE_AVG_ORDERS_PER_HOUR AS
(
	SELECT 
		TF_MONTH,
		AVG(TF_TOTAL_ORDER) AS [AVG_TF_TOTAL_ORDER]
	FROM CTE_HOURLY_ORDER
	WHERE TF_MONTH = (SELECT ZF_MONTH FROM CTE_MAX_SALES_MONTH)
	GROUP BY TF_MONTH
)
SELECT 
	TEMP.TF_HOUR,
	TEMP.TF_TOTAL_ORDER
FROM CTE_HOURLY_ORDER AS TEMP
WHERE TEMP.TF_TOTAL_ORDER > (SELECT AVG_TF_TOTAL_ORDER FROM CTE_AVG_ORDERS_PER_HOUR)
      AND TEMP.TF_MONTH = (SELECT ZF_MONTH FROM CTE_MAX_SALES_MONTH);
      
--B. VỚI MỖI PRODUCT LINE, ĐỀU CÓ 2 LOẠI KHÁCH HÀNG (CUSTOMER TYPE) MUA HÀNG LÀ NORMAL, 
--MEMBER. BẠN HÃY TÌM CÁC PRODUCT LINE CÓ LOẠI KHÁCH HÀNG MUA ÍT ĐƠN HÀNG NHƯNG LẠI CÓ 
--DOANH SỐ CAO HƠN LOẠI KHÁCH HÀNG CÒN LẠI.
WITH CTE_SUMMARY AS
(
	SELECT
		S.Product_line,
		S.Customer_type,
		ROUND(SUM(S.Unit_price * S.Quantity), 2) AS ZF_SUM_SALES,
		COUNT(DISTINCT S.Invoice_ID) AS ZF_TOTAL_ORDER
	FROM [dbo].[supermarket_sales] AS S
	GROUP BY S.Product_line, S.Customer_type
),
CTE_COMPARISON AS
(
	SELECT
		CUS_A.Product_line,
		CUS_A.Customer_type AS ZF_CUSTOMER_TYPE_A,
		CUS_A.ZF_SUM_SALES AS ZF_SUM_SALES_CUS_A,
		CUS_A.ZF_TOTAL_ORDER AS ZF_TOTAL_ORDER_CUS_A,
		CUS_B.Customer_type AS ZF_CUSTOMER_TYPE_B,
		CUS_B.ZF_SUM_SALES AS ZF_SUM_SALES_CUS_B,
		CUS_B.ZF_TOTAL_ORDER AS ZF_TOTAL_ORDER_CUS_B	    
	FROM CTE_SUMMARY AS CUS_A
	JOIN CTE_SUMMARY AS CUS_B ON CUS_A.Product_line = CUS_B.Product_line AND CUS_A.Customer_type <> CUS_B.Customer_type
)
SELECT
	TEMP.Product_line,
	ZF_CUSTOMER_TYPE_A AS Customer_type,
	ZF_SUM_SALES_CUS_A AS SumSales,
	ZF_TOTAL_ORDER_CUS_A AS [Total Order]
FROM CTE_COMPARISON AS TEMP
WHERE ZF_TOTAL_ORDER_CUS_A < ZF_TOTAL_ORDER_CUS_B AND ZF_SUM_SALES_CUS_A > ZF_SUM_SALES_CUS_B;

-- CÂU 4: BẠN HÃY XÂY DỰNG ĐOẠN TRUY VẤN TÌM RA TỔNG DOANH SỐ, TỔNG SỐ ĐƠN HÀNG THEO 
-- THÁNG, TỔNG DOANH SỐ VÀ TỔNG SỐ ĐƠN HÀNG CỦA CÁC THÁNG VỀ TRƯỚC.
WITH CTE_MONTHLY_SALES AS
(
    SELECT 
        MONTH(S.[Date]) AS ZF_MONTH,
        ROUND(SUM(S.Unit_price * S.Quantity), 2) AS ZF_SUM_SALES,
        COUNT(DISTINCT S.Invoice_ID) AS ZF_TOTAL_ORDERS
    FROM [dbo].[supermarket_sales] AS S
    GROUP BY MONTH(S.[Date])
),
CTE_PREVIOUS_MONTH AS
(
    SELECT 
        A.ZF_MONTH,
        A.ZF_SUM_SALES,
        A.ZF_TOTAL_ORDERS, 
		(
			SELECT 
				SUM(ZF_SUM_SALES) 
			FROM CTE_MONTHLY_SALES 
			WHERE ZF_MONTH < A.ZF_MONTH
		) AS ZF_PREVIOUS_SUM_SALES,		
		(
			SELECT
				SUM(ZF_TOTAL_ORDERS) 
			FROM CTE_MONTHLY_SALES 
			WHERE ZF_MONTH < A.ZF_MONTH
		) AS ZF_PREVIOUS_TOTAL_ORDERS
    FROM CTE_MONTHLY_SALES AS A
)
SELECT 
    ZF_MONTH AS [Month],
    ZF_SUM_SALES AS [SumSales],
    ZF_TOTAL_ORDERS AS [TotalOrder],
    ZF_PREVIOUS_SUM_SALES AS [Total Sales Before],
    ZF_PREVIOUS_TOTAL_ORDERS AS [Total Order Before]
FROM CTE_PREVIOUS_MONTH
ORDER BY ZF_MONTH;
